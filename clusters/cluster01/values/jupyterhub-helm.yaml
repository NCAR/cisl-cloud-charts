# With a Kubernetes cluster available and HELM installed, this HELM values
# file will install JupyterHub in the Kubernetes cluster. It is also assumed
# that you have helm and kubectl installed and configured on your workstation.
# This HELM values file will require modifications which are found and 
# described by searching for 'MODS'
# Use this file as a values.yaml reference when installing the zero2jupyterhub helm chart
# following the documentation : https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html#install-jupyterhub
jupyterhub:
    hub:
        config:
            JupyterHub:
                # <MODS> You will need to configure your authentication below. Below is currently
                # a template for Github auth and you need to fill out client_id, client_secret
                # and adjust the oauth_callback_url. This info can be generated within Developer settings
                # in Github via OAuth Apps using that oauth_callback_url you define.
                # Here is a reference to other auth ways:
                # https://jupyterhub.readthedocs.io/en/stable/tutorial/getting-started/authenticators-users-basics.html
                # </MODS>
                authenticator_class: github
            GitHubOAuthenticator:
                client_id: ENC[AES256_GCM,data:6qMjB83rkdHXMK9ch6cZzhpq9gU=,iv:q2xMvRuu6b8yefFuzWZ931xr8F1rm0bLrBjbbRGnsEw=,tag:k0Sbl/kDhs8J27cCvBKyGw==,type:str]
                client_secret: ENC[AES256_GCM,data:n7PIrLHE8lfk/wnx+yF5mAgVUD5A6r/y8aaHtxitS+T7kMWLCgbyLw==,iv:vxXK9UEyBlBETi69sxjem0aR21AvShhUPOnjmQNH6eE=,tag:BvBb2xuJF7mz+tq8Q7jGxw==,type:str]
                oauth_callback_url: ENC[AES256_GCM,data:54zGvAcrr8ooLe0gbSvbMdImUu23jaieIOGTNn9C4IPWJM7p46q6DjkSu30IyXY=,iv:Ki+9+pAXW/Vi4mLV7DHQoMotahQ+AV2yGHi1yA+DsiQ=,tag:UfDRmYdtWY1pX/z1hyamqw==,type:str]
                allowed_organizations:
                    - ENC[AES256_GCM,data:SauWMwi/qB7jjamrq1yNsa629B6T,iv:Omfr2AJdZjOLW94YMu0AYY0+EKEjXcBilJGCuK1HpsY=,tag:8I4AO4vnHc1BgVMaEzc+9w==,type:str]
                scope:
                    - read:org
            Authenticator:
                # <MODS> adjust the admin_users if needed. These use Github usernames </MODS>
                admin_users:
                    - ENC[AES256_GCM,data:ArSuFA4VHeWBTZXHoOyIcLJKmKKg0/b6vHMsHLmfAA==,iv:tsSqLeDvATEUDD1ewHtjZCwALeR+IehX/WVGFrAMXOY=,tag:TwRDaPi5GiM5nrZ8sA32eQ==,type:comment]
                    - ENC[AES256_GCM,data:K3UJPv0Ip2yx9Q==,iv:5bO/M4sz1Sg6bL2Aj3bFV9so+qeGAt1AGUBIE1A077s=,tag:B9cYdUzdiN8ZB3YLBEWF4w==,type:str]
                    - ENC[AES256_GCM,data:4D2CW7e0qN7OKdRIIHeGWq2H9dWN+f7Ko1e7uhTNnlevagKU,iv:zI+JaFPPjyHcDL75mgE64KprAiSOF9cMSOOrZufPY1A=,tag:I6oImjV7NfJeZKHhnRKkZg==,type:comment]
                    - ENC[AES256_GCM,data:/JAU2rsQvO/gwFDW,iv:S3TaTDqaeC9ubIo0NrDIF0ILGCQH+sA5zXjTmPrPYQs=,tag:YVxn0Cvp0XyUAm6BXFp/hA==,type:str]
                    - ENC[AES256_GCM,data:4zTIGgAWlujrl4xwEgtuldBOWMzQh/A6LRwJVDc41pGiA3QLajt4eQ==,iv:+8EVyK/cFpfLci0gZyjFTVVfkXjY2yev2hJ8u2aDnkE=,tag:aERzA/4cKOwP7zrG/My1bw==,type:comment]
                    - ENC[AES256_GCM,data:Xme2kc/RNL7P,iv:roEzHoobD18bnHXFtc/tQHEX6kG2kkJ3MmK2cR3cq8s=,tag:8Xfbssqzd6oc3HJs8gy7IQ==,type:str]
                    - ENC[AES256_GCM,data:9iTcMs+4FAMZHi5uAP/dXtnS3yIzwjL9cdKmhMBCIXxi5A==,iv:IgV0gGfGDEymx6oioM0Yy4jxR42z5Fn9alfpanrlpGo=,tag:654Ki928aKuF5USPDuySrQ==,type:comment]
                    - ENC[AES256_GCM,data:GdQoXku+nDumcP4NTaI=,iv:4nCj+OPCnB3+izKC1dSCrYydRQSbOKNmkLCk0+K+QoA=,tag:AzMOnTNiEhAjWpUcJ+OlVg==,type:str]
        networkPolicy:
            egress:
                - ports:
                    - port: 6443
                - to:
                    - podSelector:
                        matchLabels:
                            app.kubernetes.io/name: dask-gateway
                  ports:
                    - port: 8000
    proxy:
        # <MODS> Make sure you fill in a secretToken. Run: 'openssl rand -hex 32'
        # on your local workstation to get that value. </MODS>
        secretToken: ENC[AES256_GCM,data:OU/7gFtRnoJzWo2xp4F3uASNPKfYpn7HS3aQmtuC+ix2Sy7RGZRW+V50Mk0HExUeFV0GgB3cq17umfsemXcpWw==,iv:nsbb8FJnue2Cmf2Ab/ZaXMw1AR0p/5Y7GJs/1u3det8=,tag:mTZhrMdBAYB+bwPFqfVvdA==,type:str]
        service:
            type: ClusterIP
        chp:
            networkPolicy:
                egress:
                    - to:
                        - podSelector:
                            matchLabels:
                                app.kubernetes.io/name: dask-gateway
                      ports:
                        - port: 8000
    singleuser:
        networkPolicy:
            egress:
                - to:
                    - podSelector:
                        matchLabels:
                            app.kubernetes.io/name: dask-gateway
                  ports:
                    - port: 8000
        extraEnv:
            # About DASK_ prefixed variables we set:
            #
            # 1. k8s native variable expansion is applied with $(MY_ENV) syntax. The
            #    order variables are defined matters though and we are under the
            #    mercy of how KubeSpawner renders our passed dictionaries.
            #
            # 2. Dask loads local YAML config.
            #
            # 3. Dask loads environment variables prefixed DASK_.
            #    - DASK_ is stripped
            #    - Capitalization is ignored
            #    - Double underscore means a nested configuration
            #    - `ast.literal_eval` is used to parse values
            #
            # 4. dask-gateway and dask-distributed looks at its config and expands
            #    expressions in {} again, sometimes only with the environment
            #    variables as context but sometimes also with additional variables.
            #
            # References:
            # - K8s expansion:     https://kubernetes.io/docs/tasks/inject-data-application/define-interdependent-environment-variables/
            # - KubeSpawner issue: https://github.com/jupyterhub/kubespawner/issues/491
            # - Dask config:       https://docs.dask.org/en/latest/configuration.html
            # - Exploration issue: https://github.com/2i2c-org/infrastructure/issues/442
            #
            # DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE makes the default worker image
            # match the singleuser image.
            DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: '{{JUPYTER_IMAGE_SPEC}}'
            # DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT makes some environment
            # variables be copied over to the worker nodes from the user nodes.
            DASK_GATEWAY__CLUSTER__OPTIONS__ENVIRONMENT: '{{"SCRATCH_BUCKET": "$(SCRATCH_BUCKET)", "PANGEO_SCRATCH": "$(PANGEO_SCRATCH)"}}'
            # DASK_DISTRIBUTED__DASHBOARD__LINK makes the suggested link to the
            # dashboard account for the /user/<username>/<server-name> prefix in the path.
            # JUPYTERHUB_SERVICE_PREFIX has leading and trailing slashes as appropriate
            DASK_DISTRIBUTED__DASHBOARD__LINK: '{{JUPYTERHUB_SERVICE_PREFIX}}proxy/{{port}}/status'
        storage:
            extraVolumes:
                - name: ENC[AES256_GCM,data:zU2/okr3uoGu0g==,iv:GtNOObTMEnukkJQvwu7pm+6xOLz1iZVSrP3RO3XompI=,tag:MZeqCgcscnkmOZhWXUmj2A==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:aGq5NUzc8l0NcaLKV5Cl3P9pbtjzYA==,iv:3uVKKr2Il11NClw2wSgOCS9lRltaWBiroGnbmfZLzlo=,tag:FLqm3ZkiOx4CQ8C9BOVTHg==,type:str]
                    path: ENC[AES256_GCM,data:tQVKSA6aKTlRMpnS6SyYaokgTnw2PmfM3wMA+bbwMw==,iv:i/RHdWFV05O2A2v4i7Sfne9VBsng3Qb/Ji67SPI1CDw=,tag:92plg6Whwg2+MjeHo2PaeA==,type:str]
                - name: ENC[AES256_GCM,data:waA58UXEP7U=,iv:RgMw4cd0GVf5KU3b89F0tDMNxn0lcUD+LvRxAlvDBu8=,tag:M8bY4MAAuTY5oMJm4HmZNA==,type:str]
                  nfs:
                    server: ENC[AES256_GCM,data:DtuXbo8Jpc6Pq4DAkfiiPDA=,iv:KcIeoiZM26CqzmoqRS38otoNpsfKfjWHn7DoxhNVdp4=,tag:ZfDMs3Al9jxeEtJd67hdLA==,type:str]
                    path: ENC[AES256_GCM,data:wCFhwmD4pHqTFD0=,iv:JVTAUiEpsBxSLRCuDqmwXT6+wK/m1NbhM6uHk6PZsi0=,tag:f/8P08kPUuljDhwaxICfOw==,type:str]
            extraVolumeMounts:
                - name: ENC[AES256_GCM,data:Tfva8A+YjBWsRg==,iv:KiRg4l7TmDtqHSq3M5j2AXOSdi3IyW1lZcrx1S3JB4g=,tag:LOR+NsWGEll6MSzuB48j9A==,type:str]
                  mountPath: ENC[AES256_GCM,data:fdiYPwvqdzMi+KhKksHsXJqGlg==,iv:kz3fVSmj2JOy+XP2z70dDwsbbMu8GovfUcGhCtVn1/4=,tag:rI1RhghyazH07PppQTRWug==,type:str]
                  readOnly: ENC[AES256_GCM,data:WHP80g==,iv:Wl8N7JXG+s7G2Fmr4mVz7Q6x+WRSzXdAFf2cphG690E=,tag:lzt0tJwmErUTDOqELl+O8w==,type:bool]
                - name: ENC[AES256_GCM,data:lb2XU9XVw4Y=,iv:v64zYzSlrjWZS6oz33+59QeFN2qW9FKSolF1C7kDGTM=,tag:9d7/MnNzdPYuO+Xeo+lkJw==,type:str]
                  mountPath: ENC[AES256_GCM,data:tGgDmDIazapBdnsuRQYh,iv:3trWJoPfVqc8iMRxI3KSy6SJv2ZZW7nl81DCN6ZV6UU=,tag:mUvuPukO5zpTb7UV6TKjWQ==,type:str]
                  readOnly: ENC[AES256_GCM,data:xPjudg==,iv:GZmZwjisxiTcFVRN00u6CWdysNc4PA/q5rbCYHfta2k=,tag:wIY+L9ER46MX26djvNI5Bw==,type:bool]
        image:
            # image choice preliminary and is expected to be setup via
            # https://ncar-cisl.2i2c.cloud/services/configurator/ by the community
            #
            # pangeo/pangeo-notebook is maintained at: https://github.com/pangeo-data/pangeo-docker-images
            #name: pangeo/pangeo-notebook
            #tag: 2024.01.15
            name: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-base
            tag: 2024-04-23.19
        profileList:
            # NOTE: About node sharing
            #
            #       CPU/Memory requests/limits are actively considered still. This
            #       profile list is setup to involve node sharing as considered in
            #       https://github.com/2i2c-org/infrastructure/issues/2121.
            #
            #       - Memory requests are different from the description, based on:
            #         whats found to remain allocate in k8s, subtracting 1GiB
            #         overhead for misc system pods, and transitioning from GB in
            #         description to GiB in mem_guarantee.
            #       - CPU requests are lower than the description, with a factor of
            #         10%.
            #
            - display_name: NSF NCAR CPU Notebook
              description: Start a container with the chosen specifications
              slug: ncarcpu
              default: true
              profile_options:
                requests:
                    # NOTE: Node share choices are in active development, see comment
                    #       next to profileList: above.
                    display_name: Resource Selection
                    choices:
                        mem_1:
                            default: true
                            display_name: ~1 GB, ~0.125 CPU
                            kubespawner_override:
                                mem_guarantee: 0.904G
                                cpu_guarantee: 0.013
                        mem_4:
                            display_name: ~4 GB, ~0.5 CPU
                            kubespawner_override:
                                mem_guarantee: 1.809G
                                cpu_guarantee: 0.025
                        mem_16:
                            display_name: ~16 GB, ~2.0 CPU
                            kubespawner_override:
                                mem_guarantee: 14.469G
                                cpu_guarantee: 0.5
              kubespawner_override:
                cpu_limit: null
                mem_limit: null
            - display_name: NSF NCAR GPU Notebooks
              slug: ncargpu
              description: Start a container with access to GPU hardware
              profile_options:
                image:
                    display_name: Image
                    choices:
                        ncartensor:
                            display_name: NCAR Tensorflow ML Notebook
                            slug: ncartensor
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-tf:2024-04-24.14
                                #imagePullSecrets:
                                #    - harbor-registry-secret
                        ncarpytorch:
                            display_name: NCAR Pytorch ML Notebook
                            slug: ncarpytorch
                            kubespawner_override:
                                image: hub.k8s.ucar.edu/cislcloudpilot/cisl-cloud-gpu-pyt:2024-04-23.18
                                #imagePullSecrets:
                                #    - harbor-registry-secret
              kubespawner_override:
                mem_limit: null
                mem_guarantee: 14G
                environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility,graphics
                extra_pod_config:
                    runtimeClassName: nvidia
                extra_resource_limits:
                    nvidia.com/gpu: "1"
    ingress:
        enabled: true
        annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: 600m
            nginx.org/client-max-body-size: 10m
            nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
            nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
            nginx.ingress.kubernetes.io/rewrite-target: /
            nginx.ingress.kubernetes.io/secure-backends: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"
            nginx.ingress.kubernetes.io/websocket-services: proxy-public
            nginx.org/websocket-services: proxy-public
            cert-manager.io/cluster-issuer: incommon
        ingressClassName: nginx
        # <MODS> Adjust the hosts entries in this next session.
        hosts:
            - ENC[AES256_GCM,data:n2W2J+u8Pi9+28IwVN1cZWyccdU=,iv:SZNG4epv8wwlvcMnFnvAS3meGG+TvRmOQg+yevnTOpA=,tag:RDq2ROHntOKkdaaVhStcQQ==,type:str]
        tls:
            - hosts:
                - ENC[AES256_GCM,data:grOVh8wU89iDhBnSUbBMsH0lHh0=,iv:dkpFNnH/BcEe5qUFMzLZAa0raa0svEetRGmoC0oPu20=,tag:wfJxaSUZoPjh9tslUekpbw==,type:str]
              secretName: ENC[AES256_GCM,data:2AKXyIKkwbu+TB95vEYpGPDLeQ==,iv:P0OQMQH+g/hvZVR+SsK33ghLpQoZhioziuFZ6Mh2z/s=,tag:7YlKlVWhhWUAVz/qv/wDxg==,type:str]
              # </MODS>
dask-gateway:
    # Enabling dask-gateway will install Dask Gateway as a dependency.
    enabled: true
    # Futher Dask Gateway configuration goes here
    # See https://github.com/dask/dask-gateway/blob/master/resources/helm/dask-gateway/values.yaml
    gateway:
        backend:
            scheduler:
                extraPodConfig: null
                #          serviceAccountName: user-sa
                #          tolerations:
                #            # Let's put schedulers on notebook nodes, since they aren't ephemeral
                #            # dask can recover from dead workers, but not dead schedulers
                #            - key: "hub.jupyter.org/dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #            - key: "hub.jupyter.org_dedicated"
                #              operator: "Equal"
                #              value: "user"
                #              effect: "NoSchedule"
                #          nodeSelector:
                #            k8s.dask.org/node-purpose: scheduler
                cores:
                    request: 0.01
                    limit: 1
                memory:
                    request: 128M
                    limit: 1G
            worker:
                extraContainerConfig:
                    volumeMounts:
                        - name: campaign
                          mountPath: /glade/campaign
                          readOnly: true
                    securityContext:
                        runAsGroup: 1000
                        runAsUser: 1000
                extraPodConfig:
                    #          serviceAccountName: user-sa
                    securityContext:
                        fsGroup: 1000
                    volumes:
                        - name: campaign
                          nfs:
                            server: gladedm1.ucar.edu
                            path: /gpfs/csfs1
        #          tolerations:
        #            - key: "k8s.dask.org/dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #            - key: "k8s.dask.org_dedicated"
        #              operator: "Equal"
        #              value: "worker"
        #              effect: "NoSchedule"
        #          nodeSelector:
        #            # Dask workers get their own pre-emptible pool
        #            k8s.dask.org/node-purpose: worker
        # TODO: figure out a replacement for userLimits.
        extraConfig:
            optionHandler: |
                from dask_gateway_server.options import Options, Integer, Float, String, Mapping
                import string

                # Escape a string to be dns-safe in the same way that KubeSpawner does it.
                # Reference https://github.com/jupyterhub/kubespawner/blob/616f72c4aee26c3d2127c6af6086ec50d6cda383/kubespawner/spawner.py#L1828-L1835
                # Adapted from https://github.com/minrk/escapism to avoid installing the package
                # in the dask-gateway api pod which would have been problematic.
                def escape_string_label_safe(to_escape):
                    safe_chars = set(string.ascii_lowercase + string.digits)
                    escape_char = "-"
                    chars = []
                    for c in to_escape:
                        if c in safe_chars:
                            chars.append(c)
                        else:
                            # escape one character
                            buf = []
                            # UTF-8 uses 1 to 4 bytes per character, depending on the Unicode symbol
                            # so we need to transform each byte to its hex value
                            for byte in c.encode("utf8"):
                                buf.append(escape_char)
                                # %X is the hex value of the byte
                                buf.append('%X' % byte)
                            escaped_hex_char = "".join(buf)
                            chars.append(escaped_hex_char)
                    return u''.join(chars)

                def cluster_options(user):
                    safe_username = escape_string_label_safe(user.name)
                    def option_handler(options):
                        if ":" not in options.image:
                            raise ValueError("When specifying an image you must also provide a tag")
                        scheduler_extra_pod_annotations = {
                            "hub.jupyter.org/username": safe_username,
                            "prometheus.io/scrape": "true",
                            "prometheus.io/port": "8787",
                        }
                        extra_labels = {
                            "hub.jupyter.org/username": safe_username,
                        }
                        return {
                            "worker_cores_limit": options.worker_cores,
                            "worker_cores": options.worker_cores,
                            "worker_memory": "%fG" % options.worker_memory,
                            "image": options.image,
                            "scheduler_extra_pod_annotations": scheduler_extra_pod_annotations,
                            "scheduler_extra_pod_labels": extra_labels,
                            "worker_extra_pod_labels": extra_labels,
                            "environment": options.environment,
                        }
                    return Options(
                        Integer("worker_cores", 4, min=1, label="Worker Cores"),
                        Float("worker_memory", 8, min=1, label="Worker Memory (GiB)"),
                        # The default image is set via DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE env variable
                        String("image", label="Image"),
                        Mapping("environment", {}, label="Environment Variables"),
                        handler=option_handler,
                    )
                c.Backend.cluster_options = cluster_options
            idle: |
                # timeout after 30 minutes of inactivity
                c.KubeClusterConfig.idle_timeout = 1800
        # Users connect to the Gateway through the JupyterHub service.
        prefix: /services/dask-gateway
        auth:
            # Use JupyterHub to authenticate with Dask Gateway
            type: jupyterhub
    traefik:
        #    nodeSelector:
        #      k8s.dask.org/node-purpose: core
        service:
            # Access Dask Gateway through JupyterHub. To access the Gateway from outside JupyterHub, this must be changed to a `LoadBalancer`.
            type: ClusterIP
# A placeholder as global values that can be referenced from the same location
# of any chart should be possible to provide, but aren't necessarily provided or
# used.
#global: {}
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1ucetgj7k3whaqf9nulacsqarur6nrgzuyt59apeptu5cphd6ksdsqpy5he
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBYTzV4T0FjVkxpNTRvSExh
            SXF4NUZVVkF2UlhCMEhaSkRlZTV5VitDMjM4CmYxZk5iQm9DaFdobVNkQnhKNnZD
            V3BXckFyc0srbEU5bFAzVDBzTW1ycmMKLS0tIDg0eFlQSFVDamxieG12U01EZkJM
            OUd6Q0I5Nmd5NUdFSXR3aGhHa0VncW8KPvik2UO9JwzPTBfLjKOvA+b/M4ZlOf9g
            2LT1BiZOu3bmgrgtkEoWlmbg8OdoKIUvvj/SdYY/0EsJ7LgJafI9Mg==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1dnkv8vy8xkl5afwuwl55ycpquy2uk7ypc5ad87sfug2zffp6jgkqwwzglr
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSA5MFZHeWRxYzcwVnlVaHNP
            d2lqakx3Z2pGVmpNSmRndWY0UGF6L3NsQmswCnIzMG0rWko4TFNTdm10YXFwZEh5
            RHJzRWdNUk5UNVRSbFJVMTFuM3VnNUkKLS0tIGR3UGRZK1BxWlRCcXRRdXVCS294
            K2xYK1hnZ0VwNnIyelUzRCszb2w3bm8K1B2IItXGrctPAFSRRny3QOoqQq6Jz3TR
            rQ5h/XrrpaYgGtKXSr3BsLb1YlPz0wXMqEKHORuIw6YRb5zPet6bMA==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1wt75fkqsa2ngrhtmr7ws2ve8v9h2463hryj4jk4k7m5khxmc9pgqgqag8x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBjWk5IZXU5VFlYMTVMUVl2
            RUFBRGkzU2FVREoxK0lCTkdDRkhHMVZ1ODNVCjdYbTFxU3pJMGV0cjFieXBJMUpu
            akk5clA4NmdzRTlRdlpIdmV2WjFXQTgKLS0tIFFzZHdKbHo2MWcwYmI0UUJNbjdW
            VDhYM3lIbkhkaUQwS3hQSzBVU0FnUzAKKUybfAIgh3Y/7EBXE3rqV73ZtaBhN6r2
            zHPaWBFA0YceT0tzjKxfzZEddv5asjQIuGSkOC6Xg8zKKiKUKx0vMQ==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1fqw4znyl0zjpw5ta7ll3auxpzg8dme578jgw43a0dtzjhwjn4qlstaez7c
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAzWTdDYUFUV2NXS0VlYlox
            QjlnN0FOQnBlRDU2OWpJeGs5Y1NLUkxIY1FzClNtb08yb1NBT1NUYmE1R3JtaTVx
            QU1OYWJvZkF5cGR2L2R3MzRyU0hTMzAKLS0tIDJaRWVGMWVNUEMrWk5CUlhnNFoy
            MElNUG8zSjBFdFBGa0NzeGFaSGdENVkKtf/mZyX3drhdawbu7d4+2KsICRv6XzcR
            CJkmikLyoX3uoEUFSS3qmZDuieBc7l4QJDW0dCBGdM0Ex4f5XytjTQ==
            -----END AGE ENCRYPTED FILE-----
        - recipient: age1m2ay7zlek6d4uctt09vsw5l8gpydjlvu9xemv8pqh97urdmhhyrsh9qe86
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBKK1IzeksrMEp2cmJOQ2xR
            VVpZNURQRDdhb3pISDFyajRKUE9GUTlYOXhFCmVteEJodjVSQ0NlZUpuck9JM05H
            TStHSGJFdFlaQkZwOG43N0Nla0lsb3cKLS0tIFh5NDltdnQ2bmRSc1JqakJGR3Mw
            NmF5VWJSK1dTWTZFQnlxZGFZNTFwd00KtqVdTwpV3dwaCrydH81A3NfdbauyGea5
            3PMGH+Vdx46hqLuBWz4ddCW9Ii13jE3U4VcDBCYYL/z6ArqUs+P1Cg==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2024-06-03T21:19:40Z"
    mac: ENC[AES256_GCM,data:qbVmCUWTCe2WB7FtmGUC7+ajLtqh9+kliXLFlmhfyvzu9/v9DSeQ6dm2XyrdRRqe+mytCF3GjAkl7xDwMboYsENWYSU24tZHMSdwu4cTZAxFQDeocjZqbe02eGzYGY53wKzTYFVTKDf1z+KEn6N75De50mJ/+e/nW71EoxPA/mE=,iv:muwj18XasPLsvt3Jjb2hNjxUwB973uLTBYOSfjMxRyE=,tag:xMIlmnIewR1FD59XgKKZhw==,type:str]
    pgp: []
    encrypted_regex: ^(client_id|client_secret|secretToken|admin_users|oauth_callback_url|allowed_organizations|extraVolumes|extraVolumeMounts|hosts|secretName)$
    version: 3.8.1
